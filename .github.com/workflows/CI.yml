name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Toolchain & deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build cmake ccache \
            g++ clang \
            libgtest-dev libbenchmark-dev

      - name: Select compiler
        run: |
          if [[ "${{ matrix.compiler }}" == "clang" ]]; then
            echo "CC=clang"  >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          else
            echo "CC=gcc"    >> $GITHUB_ENV
            echo "CXX=g++"   >> $GITHUB_ENV
          fi

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake', 'CMakePresets.json') }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ matrix.compiler }}-

      # libgtest-dev ships sources; build the libs locally (no sudo install needed)
      - name: Build GTest libs
        run: |
          cmake -S /usr/src/googletest -B /usr/src/googletest/build -G Ninja
          cmake --build /usr/src/googletest/build -j
          echo "GTEST_LIB_DIR=/usr/src/googletest/build/lib" >> $GITHUB_ENV

      - name: Print versions
        run: |
          cmake --version
          $CC --version || true
          $CXX --version || true
          ccache --version || true

      - name: Configure
        run: |
          ccache --zero-stats || true
          cmake --preset ${{ matrix.compiler }}-debug \
            -D CMAKE_C_COMPILER=$CC \
            -D CMAKE_CXX_COMPILER=$CXX \
            -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -D GTest_ROOT=$GTEST_LIB_DIR

      - name: Build
        run: cmake --build --preset ${{ matrix.compiler }}-debug -j$(nproc)

      - name: Test
        run: ctest --preset all-${{ matrix.compiler }}-debug --output-on-failure

      - name: ccache stats
        if: always()
        run: ccache --show-stats || true

      - name: Upload test logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ctest-logs-${{ matrix.compiler }}-debug
          path: |
            **/Testing/**/*.xml
            **/CTest*.txt
            **/LastTest.log
