//
// Created by andreas on 01.12.24.
//


#include "gtest/gtest.h"
#include "graphs/shortest_distance_after_road_addition.h"

TEST(TestShortestDistanceAfterRoadAddition, simple1)
{
    constexpr int n{5};
    std::vector<std::vector<int>> additional_roads{{2, 4}, {0, 2}, {0, 4}};
    std::vector<int> expected_results{3, 2, 1};
    EXPECT_EQ(expected_results, shortest_distance_after_road_additions(n, additional_roads));
}


TEST(TestShortestDistanceAfterRoadAddition, simple2)
{
    constexpr int n{4};
    std::vector<std::vector<int>> additional_roads{{0, 3}, {0, 2}};
    std::vector<int> expected_results{1, 1};
    EXPECT_EQ(expected_results, shortest_distance_after_road_additions(n, additional_roads));
}


TEST(TestShortestDistanceAfterRoadAddition, simple3)
{
    constexpr int n{6};
    std::vector<std::vector<int>> additional_roads{{0, 5}, {2, 4}, {0, 2}, {0, 4}};
    std::vector<int> expected_results{1, 1, 1, 1};
    EXPECT_EQ(expected_results, shortest_distance_after_road_additions(n, additional_roads));
}


TEST(TestShortestDistanceAfterRoadAddition, complex1)
{
    constexpr int n{500};
    std::vector<std::vector<int>> additional_roads{
        {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {0, 7}, {0, 8}, {0, 9}, {0, 10}, {0, 11}, {0, 12}, {0, 13}, {0, 14},
        {0, 15}, {0, 16}, {0, 17}, {0, 18}, {0, 19}, {0, 20}, {0, 21}, {0, 22}, {0, 23}, {0, 24}, {0, 25}, {0, 26},
        {0, 27}, {0, 28}, {0, 29}, {0, 30}, {0, 31}, {0, 32}, {0, 33}, {0, 34}, {0, 35}, {0, 36}, {0, 37}, {0, 38},
        {0, 39}, {0, 40}, {0, 41}, {0, 42}, {0, 43}, {0, 44}, {0, 45}, {0, 46}, {0, 47}, {0, 48}, {0, 49}, {0, 50},
        {0, 51}, {0, 52}, {0, 53}, {0, 54}, {0, 55}, {0, 56}, {0, 57}, {0, 58}, {0, 59}, {0, 60}, {0, 61}, {0, 62},
        {0, 63}, {0, 64}, {0, 65}, {0, 66}, {0, 67}, {0, 68}, {0, 69}, {0, 70}, {0, 71}, {0, 72}, {0, 73}, {0, 74},
        {0, 75}, {0, 76}, {0, 77}, {0, 78}, {0, 79}, {0, 80}, {0, 81}, {0, 82}, {0, 83}, {0, 84}, {0, 85}, {0, 86},
        {0, 87}, {0, 88}, {0, 89}, {0, 90}, {0, 91}, {0, 92}, {0, 93}, {0, 94}, {0, 95}, {0, 96}, {0, 97}, {0, 98},
        {0, 99}, {0, 100}, {0, 101}, {0, 102}, {0, 103}, {0, 104}, {0, 105}, {0, 106}, {0, 107}, {0, 108}, {0, 109},
        {0, 110}, {0, 111}, {0, 112}, {0, 113}, {0, 114}, {0, 115}, {0, 116}, {0, 117}, {0, 118}, {0, 119}, {0, 120},
        {0, 121}, {0, 122}, {0, 123}, {0, 124}, {0, 125}, {0, 126}, {0, 127}, {0, 128}, {0, 129}, {0, 130}, {0, 131},
        {0, 132}, {0, 133}, {0, 134}, {0, 135}, {0, 136}, {0, 137}, {0, 138}, {0, 139}, {0, 140}, {0, 141}, {0, 142},
        {0, 143}, {0, 144}, {0, 145}, {0, 146}, {0, 147}, {0, 148}, {0, 149}, {0, 150}, {0, 151}, {0, 152}, {0, 153},
        {0, 154}, {0, 155}, {0, 156}, {0, 157}, {0, 158}, {0, 159}, {0, 160}, {0, 161}, {0, 162}, {0, 163}, {0, 164},
        {0, 165}, {0, 166}, {0, 167}, {0, 168}, {0, 169}, {0, 170}, {0, 171}, {0, 172}, {0, 173}, {0, 174}, {0, 175},
        {0, 176}, {0, 177}, {0, 178}, {0, 179}, {0, 180}, {0, 181}, {0, 182}, {0, 183}, {0, 184}, {0, 185}, {0, 186},
        {0, 187}, {0, 188}, {0, 189}, {0, 190}, {0, 191}, {0, 192}, {0, 193}, {0, 194}, {0, 195}, {0, 196}, {0, 197},
        {0, 198}, {0, 199}, {0, 200}, {0, 201}, {0, 202}, {0, 203}, {0, 204}, {0, 205}, {0, 206}, {0, 207}, {0, 208},
        {0, 209}, {0, 210}, {0, 211}, {0, 212}, {0, 213}, {0, 214}, {0, 215}, {0, 216}, {0, 217}, {0, 218}, {0, 219},
        {0, 220}, {0, 221}, {0, 222}, {0, 223}, {0, 224}, {0, 225}, {0, 226}, {0, 227}, {0, 228}, {0, 229}, {0, 230},
        {0, 231}, {0, 232}, {0, 233}, {0, 234}, {0, 235}, {0, 236}, {0, 237}, {0, 238}, {0, 239}, {0, 240}, {0, 241},
        {0, 242}, {0, 243}, {0, 244}, {0, 245}, {0, 246}, {0, 247}, {0, 248}, {0, 249}, {0, 250}, {0, 251}, {0, 252},
        {0, 253}, {0, 254}, {0, 255}, {0, 256}, {0, 257}, {0, 258}, {0, 259}, {0, 260}, {0, 261}, {0, 262}, {0, 263},
        {0, 264}, {0, 265}, {0, 266}, {0, 267}, {0, 268}, {0, 269}, {0, 270}, {0, 271}, {0, 272}, {0, 273}, {0, 274},
        {0, 275}, {0, 276}, {0, 277}, {0, 278}, {0, 279}, {0, 280}, {0, 281}, {0, 282}, {0, 283}, {0, 284}, {0, 285},
        {0, 286}, {0, 287}, {0, 288}, {0, 289}, {0, 290}, {0, 291}, {0, 292}, {0, 293}, {0, 294}, {0, 295}, {0, 296},
        {0, 297}, {0, 298}, {0, 299}, {0, 300}, {0, 301}, {0, 302}, {0, 303}, {0, 304}, {0, 305}, {0, 306}, {0, 307},
        {0, 308}, {0, 309}, {0, 310}, {0, 311}, {0, 312}, {0, 313}, {0, 314}, {0, 315}, {0, 316}, {0, 317}, {0, 318},
        {0, 319}, {0, 320}, {0, 321}, {0, 322}, {0, 323}, {0, 324}, {0, 325}, {0, 326}, {0, 327}, {0, 328}, {0, 329},
        {0, 330}, {0, 331}, {0, 332}, {0, 333}, {0, 334}, {0, 335}, {0, 336}, {0, 337}, {0, 338}, {0, 339}, {0, 340},
        {0, 341}, {0, 342}, {0, 343}, {0, 344}, {0, 345}, {0, 346}, {0, 347}, {0, 348}, {0, 349}, {0, 350}, {0, 351},
        {0, 352}, {0, 353}, {0, 354}, {0, 355}, {0, 356}, {0, 357}, {0, 358}, {0, 359}, {0, 360}, {0, 361}, {0, 362},
        {0, 363}, {0, 364}, {0, 365}, {0, 366}, {0, 367}, {0, 368}, {0, 369}, {0, 370}, {0, 371}, {0, 372}, {0, 373},
        {0, 374}, {0, 375}, {0, 376}, {0, 377}, {0, 378}, {0, 379}, {0, 380}, {0, 381}, {0, 382}, {0, 383}, {0, 384},
        {0, 385}, {0, 386}, {0, 387}, {0, 388}, {0, 389}, {0, 390}, {0, 391}, {0, 392}, {0, 393}, {0, 394}, {0, 395},
        {0, 396}, {0, 397}, {0, 398}, {0, 399}, {0, 400}, {0, 401}, {0, 402}, {0, 403}, {0, 404}, {0, 405}, {0, 406},
        {0, 407}, {0, 408}, {0, 409}, {0, 410}, {0, 411}, {0, 412}, {0, 413}, {0, 414}, {0, 415}, {0, 416}, {0, 417},
        {0, 418}, {0, 419}, {0, 420}, {0, 421}, {0, 422}, {0, 423}, {0, 424}, {0, 425}, {0, 426}, {0, 427}, {0, 428},
        {0, 429}, {0, 430}, {0, 431}, {0, 432}, {0, 433}, {0, 434}, {0, 435}, {0, 436}, {0, 437}, {0, 438}, {0, 439},
        {0, 440}, {0, 441}, {0, 442}, {0, 443}, {0, 444}, {0, 445}, {0, 446}, {0, 447}, {0, 448}, {0, 449}, {0, 450},
        {0, 451}, {0, 452}, {0, 453}, {0, 454}, {0, 455}, {0, 456}, {0, 457}, {0, 458}, {0, 459}, {0, 460}, {0, 461},
        {0, 462}, {0, 463}, {0, 464}, {0, 465}, {0, 466}, {0, 467}, {0, 468}, {0, 469}, {0, 470}, {0, 471}, {0, 472},
        {0, 473}, {0, 474}, {0, 475}, {0, 476}, {0, 477}, {0, 478}, {0, 479}, {0, 480}, {0, 481}, {0, 482}, {0, 483},
        {0, 484}, {0, 485}, {0, 486}, {0, 487}, {0, 488}, {0, 489}, {0, 490}, {0, 491}, {0, 492}, {0, 493}, {0, 494},
        {0, 495}, {0, 496}, {0, 497}, {0, 498}, {0, 499}
    };
    std::vector<int> expected_results{
        498, 497, 496, 495, 494, 493, 492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 482, 481, 480, 479, 478, 477,
        476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 466, 465, 464, 463, 462, 461, 460, 459, 458, 457, 456, 455,
        454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433,
        432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411,
        410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389,
        388, 387, 386, 385, 384, 383, 382, 381, 380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367,
        366, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345,
        344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 334, 333, 332, 331, 330, 329, 328, 327, 326, 325, 324, 323,
        322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301,
        300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279,
        278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257,
        256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235,
        234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213,
        212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191,
        190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169,
        168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147,
        146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125,
        124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103,
        102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76,
        75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48,
        47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20,
        19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1
    };
    EXPECT_EQ(expected_results, shortest_distance_after_road_additions(n, additional_roads));
}
